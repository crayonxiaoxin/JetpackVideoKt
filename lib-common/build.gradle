plugins {
    id 'com.android.library'
    id 'kotlin-android'
}

android {
    compileSdk 31

    defaultConfig {
        minSdk 21
        targetSdk 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    api 'androidx.core:core-ktx:1.7.0'
    api 'androidx.appcompat:appcompat:1.4.0'
    api 'com.google.android.material:material:1.4.0'
    api 'androidx.constraintlayout:constraintlayout:2.1.2'
    api "org.jetbrains.kotlin:kotlin-reflect:1.5.31"

    api "androidx.datastore:datastore-preferences:1.0.0"

    def lifecycle_version = "2.4.0"
    // ViewModel
    api "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    // LiveData
    api "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    // Lifecycles only (without ViewModel or LiveData)
    api "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    // alternately - if using Java8, use the following instead of lifecycle-compiler
    api "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"

    def nav_version = "2.3.5"
    api "androidx.navigation:navigation-fragment-ktx:$nav_version"
    api "androidx.navigation:navigation-ui-ktx:$nav_version"

    def paging_version = "3.1.0"
    api "androidx.paging:paging-runtime-ktx:$paging_version"

    def glide_version = "4.12.0"
    api "com.github.bumptech.glide:glide:$glide_version"
    annotationProcessor "com.github.bumptech.glide:compiler:$glide_version"
    api 'jp.wasabeef:glide-transformations:4.3.0'

    def smart_refresh_version = "2.0.3"
    api "com.scwang.smart:refresh-layout-kernel:$smart_refresh_version"      //核心必须依赖
    api "com.scwang.smart:refresh-header-classics:$smart_refresh_version"    //经典刷新头
    api "com.scwang.smart:refresh-footer-classics:$smart_refresh_version"    //经典加载

    def exo_version = "2.16.1"
    api "com.google.android.exoplayer:exoplayer-core:$exo_version"
    api "com.google.android.exoplayer:exoplayer-dash:$exo_version"
    api "com.google.android.exoplayer:exoplayer-ui:$exo_version"

    // CameraX core library using the camera2 implementation
    def camerax_version = "1.1.0-alpha11" // 1.0.2 -> Bug: No static method getOrCreateInstance
    // The following line is optional, as the core library is included indirectly by camera-camera2
    api "androidx.camera:camera-core:${camerax_version}"
    api "androidx.camera:camera-camera2:${camerax_version}"
    // If you want to additionally use the CameraX Lifecycle library
    api "androidx.camera:camera-lifecycle:${camerax_version}"
    // If you want to additionally use the CameraX View class
    api "androidx.camera:camera-view:1.0.0-alpha32"
    // If you want to additionally use the CameraX Extensions library
    api "androidx.camera:camera-extensions:1.0.0-alpha32"

    api "com.github.chrisbanes:PhotoView:2.3.0@aar"

    api 'com.aliyun.dpa:oss-android-sdk:2.9.10'
}